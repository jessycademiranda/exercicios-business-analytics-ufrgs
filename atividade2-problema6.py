# A popula√ß√£o do pa√≠s ùëé √© ùëùùëé no ano ùë•, enquanto que a popula√ß√£o do pa√≠s ùëè √© ùëùùëè neste mesmo ano.
# A popula√ß√£o do pa√≠s a cresce a uma taxa ùë°ùëé , enquanto que a popula√ß√£o do pa√≠s ùëè cresce a uma taxa ùë°ùëè anualmente.
# Em qual ano a popula√ß√£o do pa√≠s ùëè ser√° maior que a popula√ß√£o do pa√≠s ùëé?
# Implemente um m√≥dulo chamado demografia que conter√° o procedimento simular, o qual receber√° como
# par√¢metros os dados de entrada do problema descrito, exibindo na tela o resultado da simula√ß√£o ano a ano, bem
# como o resultado final. Caso seja imposs√≠vel a poss√≠vel do pa√≠s ùëè superar a do pa√≠s ùëé, mostre mensagem ao usu√°rio

# M√≥dulo: demografia

def simular(pa, pb, ta, tb, ano_inicial):
    ano = ano_inicial
    max_anos = 1000  # limite para evitar la√ßo infinito

    print("\nSimula√ß√£o da evolu√ß√£o populacional:")
    print(f"Ano {ano}: Pa√≠s A = {pa:.0f}, Pa√≠s B = {pb:.0f}")

    for _ in range(max_anos):
        if pb > pa:
            print(f"\n>> A popula√ß√£o do pa√≠s B superou a do pa√≠s A no ano {ano}.")
            return

        # Atualiza popula√ß√µes com base nas taxas de crescimento
        pa *= (1 + ta / 100)
        pb *= (1 + tb / 100)
        ano += 1

        print(f"Ano {ano}: Pa√≠s A = {pa:.0f}, Pa√≠s B = {pb:.0f}")

    print("\n>> A popula√ß√£o do pa√≠s B n√£o superar√° a do pa√≠s A com as taxas atuais.")
