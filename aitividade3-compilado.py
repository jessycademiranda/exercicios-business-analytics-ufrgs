# -*- coding: utf-8 -*-
"""aitividade3-jessyca.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qGrRA9bv-O9i9yiy4zQR3G-wALeGtW-4

1) Quantos imóveis há no total?
"""

import json
dados = []
with open("imoveis.json", "r", encoding="utf-8") as f:
    dados = json.load(f)
print(f"Quantidade de registros: {len(dados)}")

"""2) Quantos imóveis estão disponíveis para aluguel e venda?"""

total_disponiveis = 0
disponiveis_aluguel = 0
disponiveis_venda = 0
total_venda = 0
total_aluguel = 0

for imovel in dados:
    finalidade = imovel.get("finalidade", "").strip().lower()
    status = imovel.get("status", "").strip().lower()

    # Contagem
    if status == "disponível":
        total_disponiveis += 1

        # Verifica finalidade
        if finalidade == "aluguel":
            disponiveis_aluguel += 1
        elif finalidade == "venda":
            disponiveis_venda += 1

    # Conta total por finalidade (independente do status)
    if finalidade == "aluguel":
        total_aluguel += 1
    elif finalidade == "venda":
        total_venda += 1

print(f"Total de imóveis disponíveis: {total_disponiveis}")
print(f"Imóveis disponíveis para aluguel: {disponiveis_aluguel}")
print(f"Imóveis disponíveis para venda: {disponiveis_venda}")

"""3) Quantos imóveis já foram ou alugados ou vendidos?"""

total_indisponiveis = 0
vendidos = 0
alugados = 0

for imovel in dados:
    finalidade = imovel.get("finalidade", "").strip().lower()
    status = imovel.get("status", "").strip().lower()

    # Contagem
    if status in ("alugado", "vendido"):
        total_indisponiveis += 1

        # Verifica finalidade
        if finalidade == "aluguel":
            alugados += 1
        elif finalidade == "venda":
            vendidos += 1


print(f"Total de imóveis alugados ou vendidos: {total_indisponiveis}")
print(f"Imóveis alugados: {alugados}")
print(f"Imóveis vendidos: {vendidos}")

"""4) Há mais imóveis disponíveis para venda ou para aluguel?"""

if disponiveis_aluguel > disponiveis_venda:
    print("Há mais imóveis disponíveis para aluguel.")
elif disponiveis_venda > disponiveis_aluguel:
    print("Há mais imóveis disponíveis para venda.")
else:
    print("Há a mesma quantidade de imóveis disponíveis para venda e para aluguel.")

"""5) Qual o preço médio dos imóveis que estão disponíveis para venda?

"""

soma_precos_venda_disponivel = 0
contador_venda_disponivel = 0

for imovel in dados:
    status = imovel.get("status", "").strip().lower()
    finalidade = imovel.get("finalidade", "").strip().lower()
    preco = imovel["valores"].get("venda")

    # Verifica se o imóvel está disponível para venda
    if status == "disponível" and finalidade == "venda":
        soma_precos_venda_disponivel += preco
        contador_venda_disponivel += 1

# Calcula média (evita divisão por zero)
if contador_venda_disponivel > 0:
    preco_medio_venda = soma_precos_venda_disponivel / contador_venda_disponivel
    print(f"Preço médio dos imóveis disponíveis para venda: R$ {preco_medio_venda:,.2f}")
else:
    print("Nenhum imóvel disponível para venda.")

"""6) Qual a descrição dos imóveis próximos ao metrô?"""

imoveis_prox_metro = []

for imovel in dados:
  descricao = imovel.get("descricao", "").strip().lower()
  if 'metrô' in descricao:
    imoveis_prox_metro.append(imovel)

if imoveis_prox_metro:
    print("ID do imóvel próximo ao metrô:")
    for imovel_id in imoveis_prox_metro:
        print(imovel_id.get("id"))
else:
    print("Nenhum imóvel encontrado próximo ao metrô.")

"""7) Quais os ids dos imóveis que não possuem coordenadas geográficas cadastradas em seu endereço?"""

ids_sem_coordenadas = []

for imovel in dados:
    # Check if latitude and longitude keys exist and have non-empty values
    if 'latitude' not in imovel.get('endereco', {}) or \
       'longitude' not in imovel.get('endereco', {}) or \
       imovel['endereco'].get('latitude') is None or \
       imovel['endereco'].get('longitude') is None or \
       str(imovel['endereco'].get('latitude')).strip() == "" or \
       str(imovel['endereco'].get('longitude')).strip() == "":
        ids_sem_coordenadas.append(imovel.get("id"))

if ids_sem_coordenadas:
    print("IDs dos imóveis sem coordenadas geográficas:")
    for imovel_id in ids_sem_coordenadas:
        print(imovel_id)
else:
    print("Todos os imóveis possuem coordenadas geográficas cadastradas.")